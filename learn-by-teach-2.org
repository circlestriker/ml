* 一个完整的机器学习项目
使用真实数据

** 项目概览

利用加州普查数据，建立一个加州房价模型

机器学习项目清单
*** 划定问题
第一个问题是商业目标是什么

第二个问题是现在的解决方案效果如何

*** 选择评估指标
均方根误差（RMSE）

平均绝对误差(MAE)

*** 核实假设
避免费力不讨好

** 获取数据

*** 创建工作空间
anaconda一般用于计算领域，普通的web等领域还是用virtualenv比较方便
用conda 多个环境切换比较方便。 现有工具支持好。

*** 下载数据

*** 快速查看数据结构

直方图获得感性认识

** 创建测试集
例如，你可以计算出每个实例ID的哈希值，只保留其最后一个字节，如果该值小于等于 51（约为 256 的 20%），就将其放入测试集。这样可以保证在多次运行中，测试集保持不变，即使更新了数据集。新的测试集会包含新实例中的 20%，但不会有之前位于训练集的实例。

需要保证新数据都放到现有数据的尾部，且没有行被删除。
如果做不到，则可以用最稳定的特征来创建唯一识别码。例如，一个区的维度和经度在几百万年之内是不变的，所以可以将两者结合成一个 ID

分层采样（stratified sampling）
假设某国有 3 个城镇：
A 镇有 100 万工人，
B 镇有 200 万工人，以及
C 镇有 300 万工人。

可以在整国人口中抽60大小的样本，这个可能导致较大偏差。可能60人都是A镇的。
分层采样: 分别在ABC抽10,20,30人。
为何不命名为: 均匀采样?

? 如果调查公司采用纯随机采样，会有 12% 的概率导致采样偏差

生成测试集是机器学习非常重要的一部分


# # np.random.seed()的作用

关于seed()函数用法：seed( ) 用于指定随机数生成时算法开始的整数值。 1.如果使用相同的seed( )值，则每次生成的随即数都相同； 2.如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同。 3.设置的seed()值仅一次有效

# ### 当我们设置相同的seed时，每次生成的随机数也相同，如果不设置seed，则每次生成的随机数都会不一样
# In[1]:
from numpy.random import rand
import numpy as np
# 不使用seed
a = rand(5)
print('第一次列表a：',a)
# In[2]:
a = rand(5)
print('第二次列表a：',a)
# In[3]:
# 使用seed
np.random.seed(3)
b = rand(5)
print('第一次列表b：',b)
# In[4]:
np.random.seed(3)
b = rand(5)
print('第二次列表b：',b)
